version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.9.2
    container_name: elasticsearch
    environment:
      discovery.type: single-node
      xpack.security.enabled: "false"  # Disable security for simplicity
      ES_JAVA_OPTS: "-Xms1g -Xmx1g"
    ports:
      - "9200:9200"
    mem_limit: 2g  # Set memory limit for the container
    restart: always

  kibana:
    image: docker.elastic.co/kibana/kibana:8.9.2
    container_name: kibana
    depends_on:
      - elasticsearch
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    ports:
      - "5601:5601"

  logstash:
    image: docker.elastic.co/logstash/logstash:8.9.2
    container_name: logstash
    depends_on:
      - kafka
      - elasticsearch
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    ports:
      - "5044:5044"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx1g -Xms1g"

  mysql:
    image: mysql:8.0
    container_name: mysql
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: Prasad99@1997
      MYSQL_DATABASE: fraud_detection
      MYSQL_USER: app_user
      MYSQL_PASSWORD: app_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 3
    volumes:
      - mysql_data:/var/lib/mysql

  flask_app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: flask_app
    ports:
      - "5000:5000"
    depends_on:
      mysql:
        condition: service_healthy
      kafka:
        condition: service_started
    volumes:
      - "/Users/usha/Library/Mobile Documents/com~apple~CloudDocs/Data Science/Data Eng/Fraud detection/App:/app"
      - "/Users/usha/Library/Mobile Documents/com~apple~CloudDocs/Data Science/Data Eng/Fraud detection/App/trainModel.py:/app/trainModel.py"
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      MYSQL_HOST: mysql
      MYSQL_PORT: 3306
      MYSQL_USER: app_user
      MYSQL_PASSWORD: app_password
      MYSQL_DATABASE: fraud_detection

volumes:
  mysql_data:
